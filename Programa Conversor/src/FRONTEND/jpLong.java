/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FRONTEND;

import BACKEND.clsCalculoLong;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class jpLong extends javax.swing.JPanel {

    /**
     * Creates new form jpLong
     */
    public jpLong() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        ctLong = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnConverLong = new javax.swing.JButton();
        ctRespLong = new javax.swing.JTextField();
        chbKM1 = new javax.swing.JCheckBox();
        chbM1 = new javax.swing.JCheckBox();
        chbCM1 = new javax.swing.JCheckBox();
        chbMM1 = new javax.swing.JCheckBox();
        chbMILLA1 = new javax.swing.JCheckBox();
        chbY1 = new javax.swing.JCheckBox();
        chbPIE1 = new javax.swing.JCheckBox();
        chbPULG1 = new javax.swing.JCheckBox();
        chbMILLA2 = new javax.swing.JCheckBox();
        chbY2 = new javax.swing.JCheckBox();
        chbPIE2 = new javax.swing.JCheckBox();
        chbPULG2 = new javax.swing.JCheckBox();
        chbKM2 = new javax.swing.JCheckBox();
        chbM2 = new javax.swing.JCheckBox();
        chbCM2 = new javax.swing.JCheckBox();
        chbMM2 = new javax.swing.JCheckBox();
        btnLimpiar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(206, 458));

        jLabel1.setText("Escoja la unidad de medida que tiene:");

        ctLong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctLongActionPerformed(evt);
            }
        });
        ctLong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ctLongKeyTyped(evt);
            }
        });

        jLabel2.setText("Escoja la unidad de medida a la que desea convertir:");

        btnConverLong.setText("Convertir");
        btnConverLong.setEnabled(false);
        btnConverLong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConverLongActionPerformed(evt);
            }
        });

        ctRespLong.setEnabled(false);

        buttonGroup1.add(chbKM1);
        chbKM1.setText("Km");
        chbKM1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbKM1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(chbM1);
        chbM1.setText("m");

        buttonGroup1.add(chbCM1);
        chbCM1.setText("cm");

        buttonGroup1.add(chbMM1);
        chbMM1.setText("mm");
        chbMM1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbMM1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(chbMILLA1);
        chbMILLA1.setText("Milla");
        chbMILLA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbMILLA1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(chbY1);
        chbY1.setText("Yarda");

        buttonGroup1.add(chbPIE1);
        chbPIE1.setText("Pie");

        buttonGroup1.add(chbPULG1);
        chbPULG1.setText("Pulgada");

        buttonGroup2.add(chbMILLA2);
        chbMILLA2.setText("Milla");
        chbMILLA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbMILLA2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(chbY2);
        chbY2.setText("Yarda");
        chbY2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbY2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(chbPIE2);
        chbPIE2.setText("Pie");

        buttonGroup2.add(chbPULG2);
        chbPULG2.setText("Pulgada");

        buttonGroup2.add(chbKM2);
        chbKM2.setText("Km");
        chbKM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbKM2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(chbM2);
        chbM2.setText("m");

        buttonGroup2.add(chbCM2);
        chbCM2.setText("cm");

        buttonGroup2.add(chbMM2);
        chbMM2.setText("mm");
        chbMM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbMM2ActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(252, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ctLong, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chbKM1)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(51, 51, 51)
                            .addComponent(chbM1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(chbCM1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(chbMM1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(chbMILLA1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(chbY1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(chbPIE1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(chbPULG1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chbKM2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbM2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbCM2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbMM2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbMILLA2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbY2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbPIE2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chbPULG2)))
                .addGap(84, 84, 84))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnConverLong, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ctRespLong, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbKM1)
                    .addComponent(chbM1)
                    .addComponent(chbCM1)
                    .addComponent(chbMM1)
                    .addComponent(chbMILLA1)
                    .addComponent(chbY1)
                    .addComponent(chbPIE1)
                    .addComponent(chbPULG1))
                .addGap(18, 18, 18)
                .addComponent(ctLong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbKM2)
                    .addComponent(chbMILLA2)
                    .addComponent(chbM2)
                    .addComponent(chbCM2)
                    .addComponent(chbMM2)
                    .addComponent(chbY2)
                    .addComponent(chbPIE2)
                    .addComponent(chbPULG2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConverLong, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctRespLong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpiar)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConverLongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConverLongActionPerformed
        // TODO add your handling code here:
        String cajaLong = ctLong.getText();
       
        if (chbKM1.isSelected()){
            if (chbKM2.isSelected()){
                JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida distinta.");
            } else if (chbM2.isSelected()){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fcnKilometrosAmetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbCM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncKilometrosAcentimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbMM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncKilometrosAmilimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbMILLA2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncKilometrosAmillas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbY2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncKilometrosAyardas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPIE2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncKilometrosApies(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPULG2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncKilometrosApulgadas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        } else if (chbM1.isSelected()){
            if (chbM2.isSelected()){
                JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida distinta.");
            } else if (chbKM2.isSelected()){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMetrosAkilometros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbCM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMetrosAcentimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbMM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMetrosAmilimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbMILLA2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMetrosAmillas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbY2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMetrosAyardas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPIE2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMetrosApies(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPULG2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMetrosApulgadas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        } else if (chbMM1.isSelected()){
            if (chbMM2.isSelected()){
                JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida distinta.");
            } else if (chbKM2.isSelected()){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMilimetrosAkilometros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbCM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMilimetrosAcentimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMilimetrosAmetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbMILLA2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMilimetrosAmillas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbY2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMilimetrosAyardas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPIE2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMilimetrosApies(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPULG2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMilimetrosApulgadas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        } else if (chbMILLA1.isSelected()){
            if (chbMILLA2.isSelected()){
                JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida distinta.");
            } else if (chbKM2.isSelected()){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMillasAkilometros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbCM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMillasAcentimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMillasAmetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbMM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMillasAmilimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbY2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMillasAyardas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPIE2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMillasApies(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPULG2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncMillasApulgadas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        } else if (chbY1.isSelected()){
            if (chbY2.isSelected()){
                JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida distinta.");
            } else if (chbKM2.isSelected()){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncYardasAkilometros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbCM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncYardasAcentimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncYardasAmetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbMM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncYardasAmilimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbMILLA2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncYardasAmillas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPIE2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncYardasApies(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPULG2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncYardasApulgadas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        } else if (chbPIE1.isSelected()){
            if (chbPIE2.isSelected()){
                JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida distinta.");
            } else if (chbKM2.isSelected()){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPiesAkilometros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbCM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPiesAcentimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPiesAmetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbMM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPiesAmilimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbMILLA2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPiesAmillas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbY2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPiesAyardas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPULG2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPiesApulgadas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        } else if (chbPULG1.isSelected()){
            if (chbPULG2.isSelected()){
                JOptionPane.showMessageDialog(null, "Seleccione una unidad de medida distinta.");
            } else if (chbKM2.isSelected()){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPulgadasAkilometros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbCM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPulgadasAcentimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPulgadasAmetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }  else if (  chbMM2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPulgadasAmilimetros(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbY2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPulgadasAyardas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbPIE2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPulgadasApies(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            } else if (  chbMILLA2.isSelected()  ){
                double valorLong = 0;
                double resp = 0;

                valorLong = Double.parseDouble(   cajaLong    );

                /*INTANCIO LA CLASE*/
                clsCalculoLong objCalculoLong = new clsCalculoLong();

                resp = objCalculoLong.fncPulgadasAmillas(valorLong);

                JOptionPane.showMessageDialog(null, resp);
                ctRespLong.setText(    String.valueOf(resp)    );
            }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        }
    }//GEN-LAST:event_btnConverLongActionPerformed

    private void chbKM1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbKM1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbKM1ActionPerformed

    private void chbMM1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbMM1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbMM1ActionPerformed

    private void chbMILLA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbMILLA1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbMILLA1ActionPerformed

    private void chbMILLA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbMILLA2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbMILLA2ActionPerformed

    private void chbKM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbKM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbKM2ActionPerformed

    private void chbMM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbMM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbMM2ActionPerformed

    private void chbY2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbY2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbY2ActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        ctRespLong.setText("");
        ctLong.setText("");
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void ctLongKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ctLongKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (c < '0' || c > '9') evt.consume();
        btnConverLong.setEnabled(true);
    }//GEN-LAST:event_ctLongKeyTyped

    private void ctLongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctLongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctLongActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConverLong;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chbCM1;
    private javax.swing.JCheckBox chbCM2;
    private javax.swing.JCheckBox chbKM1;
    private javax.swing.JCheckBox chbKM2;
    private javax.swing.JCheckBox chbM1;
    private javax.swing.JCheckBox chbM2;
    private javax.swing.JCheckBox chbMILLA1;
    private javax.swing.JCheckBox chbMILLA2;
    private javax.swing.JCheckBox chbMM1;
    private javax.swing.JCheckBox chbMM2;
    private javax.swing.JCheckBox chbPIE1;
    private javax.swing.JCheckBox chbPIE2;
    private javax.swing.JCheckBox chbPULG1;
    private javax.swing.JCheckBox chbPULG2;
    private javax.swing.JCheckBox chbY1;
    private javax.swing.JCheckBox chbY2;
    private javax.swing.JTextField ctLong;
    private javax.swing.JTextField ctRespLong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
